version: '3.8'

services:
  cloudflared:
    command: tunnel --no-autoupdate run --token ${CF_TOKEN}
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    deploy:
      replicas: 2
    image: cloudflare/cloudflared:latest
    restart: always
  redis:
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    image: redis:latest
    restart: always
  postgres:
    labels:
      - "com.centurylinklabs.watchtower.enable=false"
    restart: always
    image: postgres:latest
    env_file:
      - path: .env.postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
  staffportal:
    deploy:
      replicas: 2
    image: ghcr.io/42-bangkok/staffportal:latest
    restart: always
    env_file:
      - path: .env.staffportal
  gateway:
    image: ghcr.io/42-bangkok/gateway:latest
    restart: always
    env_file:
      - path: .env.gateway
  gateway-scheduler:
    image: ghcr.io/42-bangkok/gateway:latest
    restart: always
    env_file:
      - path: .env.gateway
    entrypoint: >
      sh -c "celery -A app beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    depends_on:
      - redis
      - postgres
  gateway-worker:
    image: ghcr.io/42-bangkok/gateway:latest
    deploy:
      replicas: 2
    restart: always
    env_file:
      - path: .env.gateway
    entrypoint: >
      sh -c "celery -A app worker -l INFO -E"
    depends_on:
      - redis
      - postgres
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30

volumes:
  postgres_data:
